kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: my-azurefile-sc
provisioner: file.csi.azure.com # replace with "kubernetes.io/azure-file" if aks version is less than 1.21
allowVolumeExpansion: true
mountOptions:
  - dir_mode=0777
  - file_mode=0777
  - uid=0
  - gid=0
  - mfsymlinks
  - cache=strict
  - actimeo=30
parameters:
  skuName: Premium_LRS

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: az-file-share-pvc
spec:
  storageClassName: my-azurefile-sc
  resources:
    requests:
      storage: 5Gi
  accessModes:
    - ReadWriteMany

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: az-file-share-deployment
spec:
  replicas: 4
  selector:
    matchLabels:
      app: az-file-share-pod
  template:
    metadata:
      labels:
        app: az-file-share-pod
    spec:
      containers:
      - name: az-file-share-container
        image: stacksimplify/kube-nginxapp1:1.0.0
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 80
        volumeMounts:
          - name: az-fileshare-volume
            mountPath: "/usr/share/nginx/html/app1"
      volumes:
        - name: az-fileshare-volume
          persistentVolumeClaim:
            claimName: az-file-share-pvc


---

apiVersion: v1
kind: Service
metadata:
  name: nginexservice-lb
  labels:
    app: nginexsvc
spec:
  type: LoadBalancer
  selector:
    app: az-file-share-pod
  ports:
  - port: 80
    targetPort: 80


